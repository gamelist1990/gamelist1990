{
  "id": "C:/Users/issei/Velocity/src/routes/internal/preferences/inputs/Dropdown.tsx",
  "deps": [],
  "plugins": [
    "vite:load-fallback",
    "solid"
  ],
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { JSX, createSignal, onMount, createEffect } from \"solid-js\";\r\nimport preferences from \"~/util/preferences\";\r\nimport Preferences from \"~/types/Preferences\";\r\n\r\ninterface ToggleProps {\r\n  id: keyof Preferences;\r\n  label: string;\r\n  default: string;\r\n  values: string[];\r\n}\r\n\r\nexport default function Toggle(props: ToggleProps): JSX.Element {\r\n  const [getState, setState] = createSignal<string>(props.default);\r\n\r\n  onMount(() => {\r\n    // TODO: Fix typings\r\n    setState(preferences()[props.id] ?? (props.default as any));\r\n  });\r\n\r\n  createEffect(() => {\r\n    localStorage.setItem(\r\n      \"preferences\",\r\n      JSON.stringify(\r\n        Object.assign(preferences(), {\r\n          [props.id]: getState()\r\n        })\r\n      )\r\n    );\r\n  });\r\n\r\n  function onChange(element: HTMLSelectElement) {\r\n    element.addEventListener(\"change\", () => {\r\n      setState(element.value);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div class=\"flex items-center gap-2\">\r\n      <select\r\n        value={getState()}\r\n        ref={onChange}\r\n        id={props.id}\r\n        class=\"bg-[#2A2A32] rounded py-[7px] px-[15px]\"\r\n      >\r\n        {props.values.map(\r\n          (value): JSX.Element => (\r\n            <option class=\"text-white\" value={value.toLowerCase()}>\r\n              {value}\r\n            </option>\r\n          )\r\n        )}\r\n      </select>\r\n      <label>{props.label}</label>\r\n    </div>\r\n  );\r\n}\r\n",
      "start": 1677131499763,
      "end": 1677131500041
    },
    {
      "name": "solid",
      "result": "import { template as _$template } from \"solid-js/web\";\nimport { setAttribute as _$setAttribute } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { use as _$use } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<div class=\"flex items-center gap-2\"><select class=\"bg-[#2A2A32] rounded py-[7px] px-[15px]\"></select><label></label></div>`, 6),\n  _tmpl$2 = /*#__PURE__*/_$template(`<option class=\"text-white\"></option>`, 2);\nimport { createSignal, onMount, createEffect } from \"solid-js\";\nimport preferences from \"~/util/preferences\";\nexport default function Toggle(props) {\n  const [getState, setState] = createSignal(props.default);\n  onMount(() => {\n    // TODO: Fix typings\n    setState(preferences()[props.id] ?? props.default);\n  });\n  createEffect(() => {\n    localStorage.setItem(\"preferences\", JSON.stringify(Object.assign(preferences(), {\n      [props.id]: getState()\n    })));\n  });\n  function onChange(element) {\n    element.addEventListener(\"change\", () => {\n      setState(element.value);\n    });\n  }\n  return (() => {\n    const _el$ = _tmpl$.cloneNode(true),\n      _el$2 = _el$.firstChild,\n      _el$3 = _el$2.nextSibling;\n    const _ref$ = onChange;\n    typeof _ref$ === \"function\" ? _$use(_ref$, _el$2) : onChange = _el$2;\n    _$insert(_el$2, () => props.values.map(value => (() => {\n      const _el$4 = _tmpl$2.cloneNode(true);\n      _$insert(_el$4, value);\n      _$effect(() => _el$4.value = value.toLowerCase());\n      return _el$4;\n    })()));\n    _$insert(_el$3, () => props.label);\n    _$effect(() => _$setAttribute(_el$2, \"id\", props.id));\n    _$effect(() => _el$2.value = getState());\n    return _el$;\n  })();\n}",
      "start": 1677131500042,
      "end": 1677131500062
    }
  ],
  "virtual": false
}