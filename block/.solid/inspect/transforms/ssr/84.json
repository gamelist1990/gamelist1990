{
  "id": "C:/Users/issei/Velocity/src/util/url.ts",
  "deps": [],
  "plugins": [
    "vite:load-fallback",
    "vite:esbuild"
  ],
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import protocol from \"./protocols\";\r\nimport { xor } from \"./codec\";\r\nimport engines from \"./engines\";\r\nimport preferences from \"./preferences\";\r\n\r\nexport function normalize(url: string): string {\r\n  if (!(\"location\" in globalThis)) return url;\r\n  const reverse = protocol.reverse(url);\r\n  if (protocol.find(url)) {\r\n    return url;\r\n  }\r\n  if (reverse) {\r\n    url = reverse;\r\n  } else if (url.startsWith(location.origin + window.__uv$config.prefix)) {\r\n    url = url.replace(location.origin + window.__uv$config.prefix, \"\");\r\n    url = xor.decode(url);\r\n  }\r\n  if (url === \"about:newTab\") {\r\n    url = \"\";\r\n  }\r\n\r\n  return url;\r\n}\r\n\r\nexport function generateProxyUrl(query: string): string {\r\n  let location: string;\r\n  if (!window.__uv$config) window.location.reload();\r\n  if (protocol.find(query) || protocol.reverse(query)) {\r\n    location = protocol.find(query) || \"/internal/newTab\";\r\n  } else if (/^https?:\\/\\/([^\\s]+\\.)+[^\\s]+(:[0-65536])?$/.test(query)) {\r\n    location = window.__uv$config.prefix + window.__uv$config.encodeUrl(query);\r\n  } else if (/^([^\\s]+\\.)+[^\\s]+(:[0-65536])?$/.test(query)) {\r\n    /*\r\n        We use http here because otherwise we will get certifacate issues when trying to\r\n        connect to http only websites. If a website uses https it should automatically redirect.\r\n      */\r\n    location =\r\n      window.__uv$config.prefix +\r\n      window.__uv$config.encodeUrl(\"http://\" + query);\r\n  } else {\r\n    location =\r\n      window.__uv$config.prefix +\r\n      window.__uv$config.encodeUrl(generateSearchURL(query));\r\n  }\r\n  return location;\r\n}\r\n\r\nfunction generateSearchURL(query: string): string {\r\n  return engines[\r\n    preferences()[\"search.defaults.searchEngine\"] || \"google\"\r\n  ].searchStr.replace(\"%s\", encodeURIComponent(query));\r\n}\r\n",
      "start": 1677131502772,
      "end": 1677131502908
    },
    {
      "name": "vite:esbuild",
      "result": "import protocol from \"./protocols\";\nimport { xor } from \"./codec\";\nimport engines from \"./engines\";\nimport preferences from \"./preferences\";\nexport function normalize(url) {\n  if (!(\"location\" in globalThis))\n    return url;\n  const reverse = protocol.reverse(url);\n  if (protocol.find(url)) {\n    return url;\n  }\n  if (reverse) {\n    url = reverse;\n  } else if (url.startsWith(location.origin + window.__uv$config.prefix)) {\n    url = url.replace(location.origin + window.__uv$config.prefix, \"\");\n    url = xor.decode(url);\n  }\n  if (url === \"about:newTab\") {\n    url = \"\";\n  }\n  return url;\n}\nexport function generateProxyUrl(query) {\n  let location2;\n  if (!window.__uv$config)\n    window.location.reload();\n  if (protocol.find(query) || protocol.reverse(query)) {\n    location2 = protocol.find(query) || \"/internal/newTab\";\n  } else if (/^https?:\\/\\/([^\\s]+\\.)+[^\\s]+(:[0-65536])?$/.test(query)) {\n    location2 = window.__uv$config.prefix + window.__uv$config.encodeUrl(query);\n  } else if (/^([^\\s]+\\.)+[^\\s]+(:[0-65536])?$/.test(query)) {\n    location2 = window.__uv$config.prefix + window.__uv$config.encodeUrl(\"http://\" + query);\n  } else {\n    location2 = window.__uv$config.prefix + window.__uv$config.encodeUrl(generateSearchURL(query));\n  }\n  return location2;\n}\nfunction generateSearchURL(query) {\n  return engines[preferences()[\"search.defaults.searchEngine\"] || \"google\"].searchStr.replace(\"%s\", encodeURIComponent(query));\n}\n",
      "start": 1677131502908,
      "end": 1677131502956
    }
  ],
  "virtual": false
}